security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        chain_provider:
            chain:
                providers: [utilisateur, employeur]
        utilisateur:
            entity:
                class: App\Entity\People
                property: email
        employeur:
            entity:
                class: App\Entity\Companies
                property: contact_email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: chain_provider
            custom_authenticator: App\Security\AppAuthentificatorAuthenticator
            logout:
                path: logout
                target: accueil
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true

    access_control:
        - { path: ^/employeur, roles: ROLE_EMPLOYEUR }
        - { path: ^/admin, roles: ROLE_ADMIN }
    access_denied_url: / 


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.    
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
